/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bsmart.scaletst;

import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import com.bsmart.IDevice;
import com.bsmart.port.GnuSerialPort;
import com.bsmart.scale.SmScale;
import com.bsmart.scale.PropertyPage;
import javax.swing.ButtonGroup;

/**
 *
 * @author Виталий
 */
public class ConnectionPage extends PropertyPage {

    private final SmScale driver = SmScale.instance;

    /**
     * Creates new form ConnectionPage
     */
    public ConnectionPage() {
        initComponents();

        ButtonGroup bgPortType = new ButtonGroup();
        bgPortType.add(rbSerialPort);
        bgPortType.add(rbSocketPort);
        updatePage();
    }

    public void updatePage() {
        updatePortList();
        rbSerialPort.setSelected(driver.getPortType() == IDevice.PARAM_PORTTYPE_SERIAL);
        rbSocketPort.setSelected(driver.getPortType() == IDevice.PARAM_PORTTYPE_SOCKET);
        cbPortName.setSelectedItem(driver.getPortName());
        cbBaudRate.setSelectedItem(String.valueOf(driver.getBaudRate()));
        spTimeout.setValue(driver.getTimeout());
        edtPassword.setText(driver.getPassword());
    }

    public void updatePortList() {
        String portName = (String) cbPortName.getSelectedItem();
        ComboBoxModel model = new DefaultComboBoxModel(GnuSerialPort.getPortList().toArray());
        cbPortName.setModel(model);
        cbPortName.setSelectedItem(portName);
    }

    public void updateObject() {

        if (rbSerialPort.isSelected()) {
            driver.setPortType(IDevice.PARAM_PORTTYPE_SERIAL);
        } else {
            driver.setPortType(IDevice.PARAM_PORTTYPE_SOCKET);
        }
        driver.setPortName((String) cbPortName.getSelectedItem());
        driver.setBaudRate(Integer.parseInt((String) cbBaudRate.getSelectedItem()));
        driver.setTimeout((Integer) spTimeout.getValue());
        driver.setPassword(edtPassword.getText());
        driver.saveParams();
    }

    public void connect() {
        btnConnect.setEnabled(false);
        btnConnect.updateUI();
        try {
            txtResult.setText("");
            updateObject();
            driver.connect();
            txtResult.setText(driver.getDeviceText());
        } catch (Exception e) 
        {
            txtResult.setText("Ошибка: " + e.getMessage());
        }
        btnConnect.setEnabled(true);
        btnConnect.requestFocus();
    }

    public void disconnect() {
        btnDisconnect.setEnabled(false);
        try {
            txtResult.setText("");
            driver.disconnect();
        } catch (Exception e) {
            txtResult.setText("Ошибка: " + e.getMessage());
        }
        btnDisconnect.setEnabled(true);
        btnDisconnect.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtResult = new javax.swing.JTextArea();
        btnConnect = new javax.swing.JButton();
        btnDisconnect = new javax.swing.JButton();
        btnUpdatePortList = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblPortName = new javax.swing.JLabel();
        rbSerialPort = new javax.swing.JRadioButton();
        cbPortName = new javax.swing.JComboBox();
        lblBaudRate = new javax.swing.JLabel();
        cbBaudRate = new javax.swing.JComboBox();
        rbSocketPort = new javax.swing.JRadioButton();
        ftfIPAddress = new javax.swing.JFormattedTextField();
        lblTimeout = new javax.swing.JLabel();
        edtPassword = new javax.swing.JTextField();
        spTimeout = new javax.swing.JSpinner();
        lblPassword = new javax.swing.JLabel();
        lblIPAddress = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        txtResult.setColumns(20);
        txtResult.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        txtResult.setRows(5);
        jScrollPane1.setViewportView(txtResult);

        btnConnect.setText("Подключиться");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        btnDisconnect.setText("Отключиться");
        btnDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisconnectActionPerformed(evt);
            }
        });

        btnUpdatePortList.setText("Обновить порты");
        btnUpdatePortList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePortListActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblPortName.setText("Имя порта:");

        rbSerialPort.setText("COM порт");

        cbPortName.setEditable(true);
        cbPortName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblBaudRate.setText("Скорость:");

        cbBaudRate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2400", "4800", "9600", "19200", "38400", "57600", "115200" }));
        cbBaudRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBaudRateActionPerformed(evt);
            }
        });

        rbSocketPort.setText("Ethernet");

        ftfIPAddress.setText("192.168.10.1");

        lblTimeout.setText("Таймаут:");

        edtPassword.setText("30");

        lblPassword.setText("Пароль:");

        lblIPAddress.setText("IP адрес:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblIPAddress)
                        .addGap(33, 33, 33)
                        .addComponent(ftfIPAddress))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblTimeout)
                        .addGap(40, 40, 40)
                        .addComponent(spTimeout))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbSerialPort)
                            .addComponent(rbSocketPort))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblPassword)
                        .addGap(47, 47, 47)
                        .addComponent(edtPassword))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(lblPortName))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lblBaudRate)))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbBaudRate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbPortName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbSerialPort)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPortName)
                    .addComponent(cbPortName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBaudRate)
                    .addComponent(cbBaudRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(rbSocketPort)
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIPAddress)
                    .addComponent(ftfIPAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTimeout)
                    .addComponent(spTimeout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPassword)
                    .addComponent(edtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUpdatePortList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(btnConnect, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDisconnect, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpdatePortList, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDisconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        disconnect();
        updatePage();
        connect();
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisconnectActionPerformed
        disconnect();
    }//GEN-LAST:event_btnDisconnectActionPerformed

    private void btnUpdatePortListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePortListActionPerformed
        updatePortList();
    }//GEN-LAST:event_btnUpdatePortListActionPerformed

    private void cbBaudRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBaudRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBaudRateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnDisconnect;
    private javax.swing.JButton btnUpdatePortList;
    private javax.swing.JComboBox cbBaudRate;
    private javax.swing.JComboBox cbPortName;
    private javax.swing.JTextField edtPassword;
    private javax.swing.JFormattedTextField ftfIPAddress;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblBaudRate;
    private javax.swing.JLabel lblIPAddress;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPortName;
    private javax.swing.JLabel lblTimeout;
    private javax.swing.JRadioButton rbSerialPort;
    private javax.swing.JRadioButton rbSocketPort;
    private javax.swing.JSpinner spTimeout;
    private javax.swing.JTextArea txtResult;
    // End of variables declaration//GEN-END:variables
}
