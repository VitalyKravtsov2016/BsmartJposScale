group 'shtrihjavapos'

apply plugin: 'java'
apply plugin: 'idea'

clean.doFirst {
    delete "${projectDir}/../dist/zip/javase"
    delete "${projectDir}/build/"
}

sourceSets {
    main {
        java {
            srcDirs = [ "src" ]
        }
        resources {
            srcDirs = [ "${projectDir}/src/" ]
            includes = [ "res/*.*", "**/resources/*.*" ]
        }
    }
}

repositories {
    flatDir {
        dirs "${projectDir}/../lib"
    }
}

dependencies {

    compile 'javapos:javapos:1.14.2',
            'xerces:xercesImpl:2.12.2',
			'nrjavaserial:nrjavaserial:3.9.3'

	
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}


task utilVersionClass()  {
    def clazz = new File("${projectDir}/src/com/bsmart/util/ServiceVersion.java")
    clazz.text = "package com.bsmart.util;\n\npublic class ServiceVersion {\n    public static final String VERSION = \""+version+"\";\n}"
}

jar {
    archiveName = "smscale.jar"
    manifest {
        attributes(
            "Implementation-Title": "BSmart.JavaPOS",
            "Class-Path": configurations.compile.collect { it.getName() }.join(' '),
            "Implementation-Version": version
        )
    }
}
jar.dependsOn('utilVersionClass')

task dist(type: Zip) {
    destinationDir = new File("${rootDir}/../dist/zip/javase/")
    baseName = 'bsmart-jpos-scale'
    dependsOn jar
    
    from jar.archivePath
    from configurations.compile
    from "Res/"
    from "${rootDir}/../History.txt"
    from "${rootDir}/../Doc/JposScaleDriver.txt"
}

artifacts {
   archives dist
}

uploadArchives {

}
